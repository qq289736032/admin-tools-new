<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <description>Spring MVC Configuration</description>
    <!-- 新加引入定时器扫描 createAt:2016.12.2-->
	<import resource="spring-task.xml"/>
    <!-- 加载配置属性文件 -->
    <!--<context:property-placeholder ignore-unresolvable="true" location="classpath*:properties/application-${package.environment}.properties"/>-->
    <context:property-placeholder location="classpath*:/properties/application.properties" />

    <!-- 使用Annotation自动注册Bean,只扫描@Controller -->
    <context:component-scan base-package="com.mokylin.cabal.common,com.mokylin.cabal.modules"
                            use-default-filters="false"><!-- base-package 如果多个，用“,”分隔 -->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="mediaTypes">
            <map>
                <entry key="xml" value="application/xml"/>
                <entry key="json" value="application/json"/>
            </map>
        </property>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="favorPathExtension" value="true"/>
    </bean>

    <!-- 视图文件解析配置 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
    <mvc:default-servlet-handler/>

    <!-- 定义无Controller的path<->view直接映射 -->
    <mvc:view-controller path="/" view-name="redirect:${web.view.index}"/>


    <!-- 国际化 -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="i18n/messages"/>
    </bean>

    <!-- 拦截器配置 -->
    <mvc:interceptors>
        <!--系统拦截器-->
        <mvc:interceptor>
            <mvc:mapping path="${adminPath}/game/**" />
            <mvc:mapping path="${adminPath}/tools/**" />
            <mvc:mapping path="${adminPath}/global/**" />
            <mvc:mapping path="${adminPath}/log/**" />
            <mvc:mapping path="${adminPath}/charge/**" />
            <bean class="com.mokylin.cabal.modules.sys.interceptor.LogInterceptor"/>
        </mvc:interceptor>


        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <bean class="com.mokylin.cabal.modules.sys.interceptor.LookupSessionSyncInterceptor" />
        </mvc:interceptor>

        <mvc:interceptor>
            <mvc:mapping path="${adminPath}/game/**" />
            <mvc:mapping path="${adminPath}/tools/**" />
            <mvc:mapping path="${adminPath}/global/**" />
            <mvc:mapping path="${adminPath}/log/**" />
            <mvc:mapping path="${adminPath}/charge/**" />
            <!--<mvc:exclude-mapping path="${adminPath}/login"/>-->
            <bean class="com.mokylin.cabal.modules.sys.interceptor.ParameterInterceptor" />
        </mvc:interceptor>

        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
    </mvc:interceptors>

    <!-- 支持Shiro对Controller的方法级AOP安全控制 begin-->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean>
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="org.apache.shiro.authz.UnauthorizedException">error/403</prop>
            </props>
        </property>
    </bean>
    <!-- Shiro end -->

    <!-- 上传文件拦截，设置最大上传文件大小   10M=10*1024*1024(B)=10485760 bytes -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="${web.maxUploadSize}"/>
    </bean>

    <!--<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">-->
        <!--<constructor-arg>-->
            <!--<bean class="org.springframework.http.client.SimpleClientHttpRequestFactory">-->
                <!--<property name="connectTimeout" value="5000"/>-->
                <!--<property name="readTimeout" value="5000"/>-->
            <!--</bean>-->
        <!--</constructor-arg>-->
        <!--<property name="messageConverters">-->
            <!--<list>-->
                <!--<bean class="org.springframework.http.converter.StringHttpMessageConverter"/>-->
                <!--<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"/>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->



    <!--<bean id="serverManager" class="com.mokylin.cabal.common.redis.ServerManager" init-method="init"/>-->

    <!--<bean id="subScribeManager" class="com.mokylin.cabal.common.redis.SubScribeManager" init-method="init"/>-->

    <bean id="ehcacheCacheManager" class="com.mokylin.cabal.common.cache.EhcacheCacheManager">
        <constructor-arg index="0" ref="cacheManager"/>
    </bean>

</beans>