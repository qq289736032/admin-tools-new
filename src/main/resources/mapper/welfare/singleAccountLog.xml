<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="singleAccountLog">


	<select id="paging"
		resultType="com.mokylin.cabal.modules.welfare.entity.SingleAccountLog"
		parameterType="java.util.HashMap">
		select * from single_account_log where del_flag = 0
		<if test="@Ognl@isNotBlank(pid)">and pid = #{pid}</if>
		<if test="@Ognl@isNotBlank(serverId)">and server_id = #{serverId}</if>
		<if test="@Ognl@isNotBlank(startTime)">and create_date &gt;= #{startTime}</if>
		<if test="@Ognl@isNotBlank(endTime)">and create_date &lt;= #{endTime}</if>
		order by create_date desc
	</select>
	
	
	<select id="count"
		resultType="java.lang.Integer"
		parameterType="java.util.HashMap">
		select count(*) from single_account_log where del_flag = 0
		<if test="@Ognl@isNotBlank(pid)">and pid = #{pid}</if>
		<if test="@Ognl@isNotBlank(serverId)">and server_id = #{serverId}</if>
		<if test="@Ognl@isNotBlank(startTime)">and create_date &gt;= #{startTime}</if>
		<if test="@Ognl@isNotBlank(endTime)">and create_date &lt;= #{endTime}</if>
	</select>
	
	

	<insert id="insert" parameterType="com.mokylin.cabal.modules.welfare.entity.SingleAccountLog">
        insert into single_account_log(
            id,
			top_charge,
			edit_type,
			user_id,
			role_id,
			role_name,
			create_name,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			is_influence,
			pid,
			plat_name,
			server_id,
			server_name
		)
		values(
		    #{id},
			#{topCharge},
			#{editType},
			#{userId},
			#{roleId},
			#{roleName},
			#{createName},
			#{createBy},
			now(),
			#{updateBy},
			now(),
			0,
			#{isInfluence},
			#{pid},
			#{platName},
			#{serverId},
			#{serverName}
		)
    </insert>
    
    	<insert id="batchInsert" parameterType="java.util.List">
        insert into single_account_log(
            id,
			top_charge,
			edit_type,
			user_id,
			role_id,
			role_name,
			create_name,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			is_influence,
			pid,
			plat_name,
			server_id,
			server_name
		)
		values
		<foreach item="item" index="index" collection="list" separator=",">
		(
		    #{item.id},
			#{item.topCharge},
			#{item.editType},
			#{item.userId},
			#{item.roleId},
			#{item.roleName},
			#{item.createName},
			#{item.createBy},
			now(),
			#{item.updateBy},
			now(),
			0,
			#{item.isInfluence},
			#{item.pid},
			#{item.platName},
			#{item.serverId},
			#{item.serverName}
		)
		</foreach>
    </insert>
</mapper>